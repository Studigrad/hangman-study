{"ast":null,"code":"import _classCallCheck from\"C:/Users/\\u0418\\u043B\\u044C\\u044F/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/\\u0418\\u043B\\u044C\\u044F/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"C:/Users/\\u0418\\u043B\\u044C\\u044F/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"C:/Users/\\u0418\\u043B\\u044C\\u044F/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/\\u0418\\u043B\\u044C\\u044F/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from\"react\";import\"./Hangman.css\";import img0 from\"./0.jpg\";import img1 from\"./1.jpg\";import img2 from\"./2.jpg\";import img3 from\"./3.jpg\";import img4 from\"./4.jpg\";import img5 from\"./5.jpg\";import img6 from\"./6.jpg\";var Hangman=/*#__PURE__*/function(_Component){_inherits(Hangman,_Component);var _super=_createSuper(Hangman);/** by default, allow 6 guesses and use provided gallows images. */function Hangman(props){var _this;_classCallCheck(this,Hangman);_this=_super.call(this,props);_this.state={nWrong:0,guessed:new Set(),answer:\"apple\"};_this.handleGuess=_this.handleGuess.bind(_assertThisInitialized(_this));return _this;}/** guessedWord: show current-state of word:\n    if guessed letters are {a,p,e}, show \"app_e\" for \"apple\"\n  */_createClass(Hangman,[{key:\"guessedWord\",value:function guessedWord(){var _this2=this;return this.state.answer.split(\"\").map(function(ltr){return _this2.state.guessed.has(ltr)?ltr:\"_\";});}/** handleGuest: handle a guessed letter:\n    - add to guessed letters\n    - if not in answer, increase number-wrong guesses\n  */},{key:\"handleGuess\",value:function handleGuess(evt){var ltr=evt.target.value;this.setState(function(st){return{guessed:st.guessed.add(ltr),nWrong:st.nWrong+(st.answer.includes(ltr)?0:1)};});}/** generateButtons: return array of letter buttons to render */},{key:\"generateButtons\",value:function generateButtons(){var _this3=this;return\"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(function(ltr){return/*#__PURE__*/React.createElement(\"button\",{value:ltr,onClick:_this3.handleGuess,disabled:_this3.state.guessed.has(ltr)},ltr);});}/** render: render game */},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"Hangman\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Hangman\"),/*#__PURE__*/React.createElement(\"img\",{src:this.props.images[this.state.nWrong]}),/*#__PURE__*/React.createElement(\"p\",{className:\"Hangman-word\"},this.guessedWord()),/*#__PURE__*/React.createElement(\"p\",{className:\"Hangman-btns\"},this.generateButtons()));}}]);return Hangman;}(Component);Hangman.defaultProps={maxWrong:6,images:[img0,img1,img2,img3,img4,img5,img6]};export default Hangman;","map":{"version":3,"sources":["D:/React/react-hangman-starter/src/Hangman.js"],"names":["React","Component","img0","img1","img2","img3","img4","img5","img6","Hangman","props","state","nWrong","guessed","Set","answer","handleGuess","bind","split","map","ltr","has","evt","target","value","setState","st","add","includes","images","guessedWord","generateButtons","defaultProps","maxWrong"],"mappings":"8zBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,C,GAEMC,CAAAA,O,kGACJ,mEAMA,iBAAYC,KAAZ,CAAmB,yCACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CAAEC,MAAM,CAAE,CAAV,CAAaC,OAAO,CAAE,GAAIC,CAAAA,GAAJ,EAAtB,CAAiCC,MAAM,CAAE,OAAzC,CAAb,CACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CAHiB,aAIlB,CAED;AACF;AACA,I,+CACE,sBAAc,iBACZ,MAAO,MAAKN,KAAL,CAAWI,MAAX,CACJG,KADI,CACE,EADF,EAEJC,GAFI,CAEA,SAAAC,GAAG,QAAK,CAAA,MAAI,CAACT,KAAL,CAAWE,OAAX,CAAmBQ,GAAnB,CAAuBD,GAAvB,EAA8BA,GAA9B,CAAoC,GAAzC,EAFH,CAAP,CAGD,CAED;AACF;AACA;AACA,I,2BACE,qBAAYE,GAAZ,CAAiB,CACf,GAAIF,CAAAA,GAAG,CAAGE,GAAG,CAACC,MAAJ,CAAWC,KAArB,CACA,KAAKC,QAAL,CAAc,SAAAC,EAAE,QAAK,CACnBb,OAAO,CAAEa,EAAE,CAACb,OAAH,CAAWc,GAAX,CAAeP,GAAf,CADU,CAEnBR,MAAM,CAAEc,EAAE,CAACd,MAAH,EAAac,EAAE,CAACX,MAAH,CAAUa,QAAV,CAAmBR,GAAnB,EAA0B,CAA1B,CAA8B,CAA3C,CAFW,CAAL,EAAhB,EAID,CAED,gE,+BACA,0BAAkB,iBAChB,MAAO,6BAA6BF,KAA7B,CAAmC,EAAnC,EAAuCC,GAAvC,CAA2C,SAAAC,GAAG,qBACnD,8BACE,KAAK,CAAEA,GADT,CAEE,OAAO,CAAE,MAAI,CAACJ,WAFhB,CAGE,QAAQ,CAAE,MAAI,CAACL,KAAL,CAAWE,OAAX,CAAmBQ,GAAnB,CAAuBD,GAAvB,CAHZ,EAKGA,GALH,CADmD,EAA9C,CAAP,CASD,CAED,0B,sBACA,iBAAS,CACP,mBACE,2BAAK,SAAS,CAAC,SAAf,eACE,wCADF,cAEE,2BAAK,GAAG,CAAE,KAAKV,KAAL,CAAWmB,MAAX,CAAkB,KAAKlB,KAAL,CAAWC,MAA7B,CAAV,EAFF,cAGE,yBAAG,SAAS,CAAC,cAAb,EAA6B,KAAKkB,WAAL,EAA7B,CAHF,cAIE,yBAAG,SAAS,CAAC,cAAb,EAA6B,KAAKC,eAAL,EAA7B,CAJF,CADF,CAQD,C,qBAzDmB9B,S,EAAhBQ,O,CAEGuB,Y,CAAe,CACpBC,QAAQ,CAAE,CADU,CAEpBJ,MAAM,CAAE,CAAC3B,IAAD,CAAOC,IAAP,CAAaC,IAAb,CAAmBC,IAAnB,CAAyBC,IAAzB,CAA+BC,IAA/B,CAAqCC,IAArC,CAFY,C,CA0DxB,cAAeC,CAAAA,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Hangman.css\";\nimport img0 from \"./0.jpg\";\nimport img1 from \"./1.jpg\";\nimport img2 from \"./2.jpg\";\nimport img3 from \"./3.jpg\";\nimport img4 from \"./4.jpg\";\nimport img5 from \"./5.jpg\";\nimport img6 from \"./6.jpg\";\n\nclass Hangman extends Component {\n  /** by default, allow 6 guesses and use provided gallows images. */\n  static defaultProps = {\n    maxWrong: 6,\n    images: [img0, img1, img2, img3, img4, img5, img6]\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { nWrong: 0, guessed: new Set(), answer: \"apple\" };\n    this.handleGuess = this.handleGuess.bind(this);\n  }\n\n  /** guessedWord: show current-state of word:\n    if guessed letters are {a,p,e}, show \"app_e\" for \"apple\"\n  */\n  guessedWord() {\n    return this.state.answer\n      .split(\"\")\n      .map(ltr => (this.state.guessed.has(ltr) ? ltr : \"_\"));\n  }\n\n  /** handleGuest: handle a guessed letter:\n    - add to guessed letters\n    - if not in answer, increase number-wrong guesses\n  */\n  handleGuess(evt) {\n    let ltr = evt.target.value;\n    this.setState(st => ({\n      guessed: st.guessed.add(ltr),\n      nWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1)\n    }));\n  }\n\n  /** generateButtons: return array of letter buttons to render */\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(ltr => (\n      <button\n        value={ltr}\n        onClick={this.handleGuess}\n        disabled={this.state.guessed.has(ltr)}\n      >\n        {ltr}\n      </button>\n    ));\n  }\n\n  /** render: render game */\n  render() {\n    return (\n      <div className='Hangman'>\n        <h1>Hangman</h1>\n        <img src={this.props.images[this.state.nWrong]} />\n        <p className='Hangman-word'>{this.guessedWord()}</p>\n        <p className='Hangman-btns'>{this.generateButtons()}</p>\n      </div>\n    );\n  }\n}\n\nexport default Hangman;\n"]},"metadata":{},"sourceType":"module"}